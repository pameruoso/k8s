The Kubernetes API Server needs access to the Kubelet for executing commands and getting logs and metrics.

When setting up the worker nodes in the next part, we will secure Kubelet by setting the â€“authorization-mode flag to Webhook.

We therefore need to create a ClusterRole and bind it to the kubernetes user so that Kubernetes API Server can be properly authorized by the Kubelet.

	1. Create the system:kube-apiserver-to-kubelet: apiserver_to_kubelet_rbac.yaml
  
	apiVersion: rbac.authorization.k8s.io/v1beta1
	kind: ClusterRole
	metadata:
	  annotations:
	    rbac.authorization.kubernetes.io/autoupdate: "true"
	  labels:
	    kubernetes.io/bootstrapping: rbac-defaults
	  name: system:kube-apiserver-to-kubelet
	rules:
	  - apiGroups:
	      - ""
	    resources:
	      - nodes/proxy
	      - nodes/stats
	      - nodes/log
	      - nodes/spec
	      - nodes/metrics
	    verbs:
	      - "*"
	
	2. Bind user Kubernetes to cluster role: k8sUserBinding.yaml
  
	apiVersion: rbac.authorization.k8s.io/v1beta1
	kind: ClusterRoleBinding
	metadata:
	  name: system:kube-apiserver
	  namespace: ""
	roleRef:
	  apiGroup: rbac.authorization.k8s.io
	  kind: ClusterRole
	  name: system:kube-apiserver-to-kubelet
	subjects:
	  - apiGroup: rbac.authorization.k8s.io
	    kind: User
	    name: kubernetes
	
	3. Check the permission
  curl -k https://172.29.21.10:6443/version
